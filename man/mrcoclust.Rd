% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mrcoclust.R
\name{mrcoclust}
\alias{mrcoclust}
\title{Randomized spectral co-clustering for multilayer stochastic co-block models}
\usage{
mrcoclust(
  mlA,
  rank.r,
  rank.c,
  kr,
  kc,
  q = 2,
  p = 0.7,
  iter.max = 50,
  nstart = 10,
  nthread = 1
)
}
\arguments{
\item{mlA}{The adjacency matrices list of a multilayer directed network consists of "\code{dgCMatrix}" types.}

\item{rank.r}{The target row rank of the low-rank decomposition.}

\item{rank.c}{The target column rank of the low-rank decomposition.}

\item{kr}{The number of row clusters.}

\item{kc}{The number of column clusters.}

\item{q}{The power parameter. It need to be a positive integer number. Default is 2.}

\item{p}{The sampling probability. Should be between 0 and 1. Default is 0.7.}

\item{iter.max}{Maximum number of iterations in the \code{\link[stats]{kmeans}}. Default is 50.}

\item{nstart}{The number of random sets in \code{\link[stats]{kmeans}}. Default is 10.}

\item{nthread}{Maximum number of threads for specific computations which could be implemented in parallel. Default is 1.}
}
\value{
\item{row.cluster}{The row cluster vector (from \code{1:kr}) with the numbers indicating which row cluster each node is assigned.}
        \item{col.cluster}{The column cluster vector (from \code{1:kc}) with the numbers indicating which column cluster each node is assigned.}
}
\description{
Randomized spectral co-clustering for multilayer directed networks. Randomized
clustering uses both the random sampling strategy and the random projection
strategy. Can deal with very large networks.
}
\details{
This function computes the clusters of multilayer directed networks using
randomized spectral co-clustering algorithms. Random sampling is first performed
on the adjacency matrices, then the random projection-based eigendecomposition
is performed on the aggregated matrix. The k-means is then performed on the
randomized eigenvectors.
}
\examples{
n <- 600
kr <- 2
kc <- 2
row.label.true <- sample(rep(1:kr, each = n/kr), n)
col.label.true <- sample(rep(1:kc, each = n/kc), n)
probmat1 <- matrix(0.05, kr, kc) + diag(c(0.1, 0.05))
probmat1[1,2] <- 0.08
probmat2 <- matrix(0.01, kr, kc) + diag(c(0.05, 0.02))
probmat2[2,1] <- 0.1
probmats <- list(probmat1, probmat2, probmat2)
mlA <- mln_generator(row.label.true, col.label.true, probmats, directed = TRUE)
rank.r <- 2
rank.c <- 2
q <- 2
p <- 0.7
cc <- mrcoclust(mlA, rank.r, rank.c, kr, kc, q = q, p = p)

}
